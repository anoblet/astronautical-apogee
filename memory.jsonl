{"type":"entity","entityType":"CodingStyle","name":"User Coding Style","observations":["Prefers minimal, composable, and reusable components.","Emphasizes decoupling and simplicity in code structure.","Strictly adheres to a global color scheme and atomic CSS principles.","Removes unnecessary comments and avoids adding new ones.","Keeps changes to existing logic minimal and only updates when necessary.","Values performance optimization and bundle size reduction.","Uses semantic HTML and prioritizes accessibility.","Favors utility CSS classes and direct element targeting over page-specific classes.","Organizes code for maintainability and extensibility, with clear separation of concerns.","Prefers content-driven component design over prop-driven design.","Expects all chat interactions and insights to be logged and instructions updated after each exchange.","Wants all code to include an empty line at the end of the file.","Consistently requests strict adherence to project and coding instructions.","Prefers clean, organized, and efficient solutions with clear, actionable, and concise communication.","Values consistency across pages and components, and expects design patterns to be maintained throughout the application.","Favors automated, agent-driven QA and iterative improvement with traceable chat logs.","Prefers minimal, streamlined approaches to file management and configuration.","Expects all code and content to be workspace-specific, efficient, and aligned with the goals and standards of the astronautical-apogee project.","Wants all changes to be as minimal as possible, with a focus on reusability and performance.","Prefers detailed technical analysis with actionable recommendations and clear prioritization.","Values introductions that are concise and clearly connect the articleâ€™s theme to actionable business outcomes, setting the stage for the content that follows.","Prefers overview + detail content patterns, with summary pages leading to detailed sub-pages.","Wants navigation and linking to be clear, hierarchical, and consistent for enhanced user experience.","Expects rigorous, step-by-step planning and validation before, during, and after code changes.","Wants all edge cases and boundary conditions to be considered and tested.","Prefers content-driven, minimal component syntax without unnecessary attributes.","Values maintainability, extensibility, and DRY principles in all code and content."]}